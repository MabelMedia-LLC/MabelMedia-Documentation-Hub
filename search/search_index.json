{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome To The MabelMedia Documentation Hub! Looking For Docs Writing Volunteer These Docs Are OVER 10 Versions Out Of Date, As Development Has Out Prioitized And Out Paced Documentation. Writing Docs Is Tiring Work, And I Really Just Want To Spend That Time Developing New Things. If You Want To Volunteer To Write The Docs For One Or Multiple Projects, Please Send Me A Message. Please Note That Access To That Project's Source Code Will Not Be Provided. You Will Need To Know About Mkdocs , Material Theme For Mkdocs , and Markdown . You Will Be Credited For Your Work, In The Footer.","title":"Home"},{"location":"#welcome-to-the-mabelmedia-documentation-hub","text":"Looking For Docs Writing Volunteer","title":"Welcome To The MabelMedia Documentation Hub!"},{"location":"#these-docs-are-over-10-versions-out-of-date-as-development-has-out-prioitized-and-out-paced-documentation","text":"Writing Docs Is Tiring Work, And I Really Just Want To Spend That Time Developing New Things. If You Want To Volunteer To Write The Docs For One Or Multiple Projects, Please Send Me A Message. Please Note That Access To That Project's Source Code Will Not Be Provided. You Will Need To Know About Mkdocs , Material Theme For Mkdocs , and Markdown . You Will Be Credited For Your Work, In The Footer.","title":"These Docs Are OVER 10 Versions Out Of Date, As Development Has Out Prioitized And Out Paced Documentation."},{"location":"MabelMedia.SharpPlus/","text":"MabelMedia.SharpPlus Documentation, v1.9.0 Getting Started With SharpPlus Go To The Download Page And Download The Latest Release Archive ([Latest Version].zip). Extract The Files To A Folder. Add The Needed Libraries' .DLL Files As References In Your C# IDE Of Choice. Type using MabelMedia.SharpPlus.[Library Name]; . Now You Can Use The Libraries, According To The Specifications In This Documentation. Important Notes Please Take The Following Notes Into Consideration When Using These Docs: These Docs May Be Slightly Out Of Date, Due To The Fast Pace Of The Development. Please Expect At Least 1 Version Of Lag. Change Logs Will Not Be Made, Because It Slows Development Down Too Much.","title":"Home"},{"location":"MabelMedia.SharpPlus/#mabelmediasharpplus-documentation-v190","text":"","title":"MabelMedia.SharpPlus Documentation, v1.9.0"},{"location":"MabelMedia.SharpPlus/#getting-started-with-sharpplus","text":"Go To The Download Page And Download The Latest Release Archive ([Latest Version].zip). Extract The Files To A Folder. Add The Needed Libraries' .DLL Files As References In Your C# IDE Of Choice. Type using MabelMedia.SharpPlus.[Library Name]; . Now You Can Use The Libraries, According To The Specifications In This Documentation.","title":"Getting Started With SharpPlus"},{"location":"MabelMedia.SharpPlus/#important-notes","text":"","title":"Important Notes"},{"location":"MabelMedia.SharpPlus/#please-take-the-following-notes-into-consideration-when-using-these-docs","text":"These Docs May Be Slightly Out Of Date, Due To The Fast Pace Of The Development. Please Expect At Least 1 Version Of Lag. Change Logs Will Not Be Made, Because It Slows Development Down Too Much.","title":"Please Take The Following Notes Into Consideration When Using These Docs:"},{"location":"MabelMedia.SharpPlus/Application/AppInfo/","text":"Application.AppInfo Fields AppInfo LoadedInfo - The Loaded Instance Used By The Running App. string Name - The Name Of The App. string Author - The App's Author. Version Version - The App's Version. Methods void Init(string AppName, string AppAuthor, Version AppVersion) - Initialize AppInfo.LoadedInfo With Your App's Info.","title":"AppInfo"},{"location":"MabelMedia.SharpPlus/Application/AppInfo/#applicationappinfo","text":"","title":"Application.AppInfo"},{"location":"MabelMedia.SharpPlus/Application/AppInfo/#fields","text":"AppInfo LoadedInfo - The Loaded Instance Used By The Running App. string Name - The Name Of The App. string Author - The App's Author. Version Version - The App's Version.","title":"Fields"},{"location":"MabelMedia.SharpPlus/Application/AppInfo/#methods","text":"void Init(string AppName, string AppAuthor, Version AppVersion) - Initialize AppInfo.LoadedInfo With Your App's Info.","title":"Methods"},{"location":"MabelMedia.SharpPlus/Application/Wrappers/","text":"Application.Wrappers Extensions string Version.Stringify() - Turn A Version Into A string . bool AppInfo.Equals(this AppInfo Src1, AppInfo Src2) - Compare 2 AppInfo Instances. string AppInfo.Stringify() - Turn An AppInfo Into A string .","title":"Wrappers"},{"location":"MabelMedia.SharpPlus/Application/Wrappers/#applicationwrappers","text":"","title":"Application.Wrappers"},{"location":"MabelMedia.SharpPlus/Application/Wrappers/#extensions","text":"string Version.Stringify() - Turn A Version Into A string . bool AppInfo.Equals(this AppInfo Src1, AppInfo Src2) - Compare 2 AppInfo Instances. string AppInfo.Stringify() - Turn An AppInfo Into A string .","title":"Extensions"},{"location":"MabelMedia.SharpPlus/BetterForms/AboutBox/","text":"BetterForms.AboutBox Fields BetterLabel VersionInfo - The App's Version Info. PictureBox Logo - The App's Logo. Methods new(FormClosedEventHandler CloseEvent, Image Logo) - Create A New AboutBox .","title":"AboutBox"},{"location":"MabelMedia.SharpPlus/BetterForms/AboutBox/#betterformsaboutbox","text":"","title":"BetterForms.AboutBox"},{"location":"MabelMedia.SharpPlus/BetterForms/AboutBox/#fields","text":"BetterLabel VersionInfo - The App's Version Info. PictureBox Logo - The App's Logo.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/AboutBox/#methods","text":"new(FormClosedEventHandler CloseEvent, Image Logo) - Create A New AboutBox .","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterButton/","text":"BetterForms.BetterButton Fields BetterLabel Text - The BetterButton 's Text. Methods new(Point Location, Size Size, string ButtonText, EventHandler ClickEvent, float FontSize) - Create A New BetterButton .","title":"BetterButton"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterButton/#betterformsbetterbutton","text":"","title":"BetterForms.BetterButton"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterButton/#fields","text":"BetterLabel Text - The BetterButton 's Text.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterButton/#methods","text":"new(Point Location, Size Size, string ButtonText, EventHandler ClickEvent, float FontSize) - Create A New BetterButton .","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterLabel/","text":"BetterForms.BetterLabel Methods new(string Text, Point Location, Size BoundSize, float FontSize) - Create A New BetterLabel .","title":"BetterLabel"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterLabel/#betterformsbetterlabel","text":"","title":"BetterForms.BetterLabel"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterLabel/#methods","text":"new(string Text, Point Location, Size BoundSize, float FontSize) - Create A New BetterLabel .","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterLinkLabel/","text":"BetterForms.BetterLinkLabel Methods new(string Text, Point Location, Size Size, float FontSize, string Url) - Create A New BetterLinkLabel .","title":"BetterLinkLabel"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterLinkLabel/#betterformsbetterlinklabel","text":"","title":"BetterForms.BetterLinkLabel"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterLinkLabel/#methods","text":"new(string Text, Point Location, Size Size, float FontSize, string Url) - Create A New BetterLinkLabel .","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterNotifyIcon/","text":"BetterForms.BetterNotifyIcon Fields NotifyIcon SystemTrayIcon - The Underlying System Tray Icon. Methods new(string Text, Icon Icon, List<MenuItem> Menu) - Create A New BetterNotifyIcon .","title":"BetterNotifyIcon"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterNotifyIcon/#betterformsbetternotifyicon","text":"","title":"BetterForms.BetterNotifyIcon"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterNotifyIcon/#fields","text":"NotifyIcon SystemTrayIcon - The Underlying System Tray Icon.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterNotifyIcon/#methods","text":"new(string Text, Icon Icon, List<MenuItem> Menu) - Create A New BetterNotifyIcon .","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterProgressBar/","text":"BetterForms.BetterProgressBar Fields int Maximum - The Maximum Steps To Take To Fill The Bar 100%. int Index - The Amount Of Steps Taken So Far. Methods void SetIndex(int Index) - Set The Progress Bar's Index.","title":"BetterProgressBar"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterProgressBar/#betterformsbetterprogressbar","text":"","title":"BetterForms.BetterProgressBar"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterProgressBar/#fields","text":"int Maximum - The Maximum Steps To Take To Fill The Bar 100%. int Index - The Amount Of Steps Taken So Far.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/BetterProgressBar/#methods","text":"void SetIndex(int Index) - Set The Progress Bar's Index.","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/Helpers/","text":"BetterForms.Helpers Extensions int Wrap(this int Src, int Min, int Max) - Wrap Any Value Around Min And Max Values. int Center(this int ParentWidth, int Width) - Center A Control Inside It's Parent.","title":"Helpers"},{"location":"MabelMedia.SharpPlus/BetterForms/Helpers/#betterformshelpers","text":"","title":"BetterForms.Helpers"},{"location":"MabelMedia.SharpPlus/BetterForms/Helpers/#extensions","text":"int Wrap(this int Src, int Min, int Max) - Wrap Any Value Around Min And Max Values. int Center(this int ParentWidth, int Width) - Center A Control Inside It's Parent.","title":"Extensions"},{"location":"MabelMedia.SharpPlus/BetterForms/SideBar/","text":"BetterForms.SideBar Fields List<Panel> Pages - A List Of Pages. List<BetterButton> Buttons - A List Of Buttons To Switch Between Pages . int SelectedIndex - The Curently Selected Index Into Pages . Methods new(int Width, int TopOffset, Color BGColor, Dictionary<string, BetterButton> Buttons, Control Parent) - Create a New SideBar . void SwitchPages(int NewIndex, string PageName) - Switch Pages, And Update SideBar Buttons Accordingly.","title":"SideBar"},{"location":"MabelMedia.SharpPlus/BetterForms/SideBar/#betterformssidebar","text":"","title":"BetterForms.SideBar"},{"location":"MabelMedia.SharpPlus/BetterForms/SideBar/#fields","text":"List<Panel> Pages - A List Of Pages. List<BetterButton> Buttons - A List Of Buttons To Switch Between Pages . int SelectedIndex - The Curently Selected Index Into Pages .","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/SideBar/#methods","text":"new(int Width, int TopOffset, Color BGColor, Dictionary<string, BetterButton> Buttons, Control Parent) - Create a New SideBar . void SwitchPages(int NewIndex, string PageName) - Switch Pages, And Update SideBar Buttons Accordingly.","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/Window/","text":"BetterForms.Window Fields bool SingleInstanced - Whether Or Not To Summon This Window Multiple Times. BetterLabel TitleText - The Window's Title Bar Text. Methods new(string Text, [bool SingleInstanced = false] - Create A New Window . void Show() - Show This Window Manually. void Close() - Close This Window Manually.","title":"Window"},{"location":"MabelMedia.SharpPlus/BetterForms/Window/#betterformswindow","text":"","title":"BetterForms.Window"},{"location":"MabelMedia.SharpPlus/BetterForms/Window/#fields","text":"bool SingleInstanced - Whether Or Not To Summon This Window Multiple Times. BetterLabel TitleText - The Window's Title Bar Text.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/Window/#methods","text":"new(string Text, [bool SingleInstanced = false] - Create A New Window . void Show() - Show This Window Manually. void Close() - Close This Window Manually.","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/DynamicTheme/","text":"Theming.DynamicTheme Fields Theme Theme - The Underlying Loaded Theme. EventHandler ThemeChanged - A Custom Event Handler, Triggered When The Theme Is Changed. Subscribe To This In A Custom Control To Implement Theming. Methods void UpdateTheme() - Manually Trigger The Theme Update Event. This Refreshes All Controls That Support Theming. Do This After Creating The UI, Or After Loading Dynamic Content.","title":"DynamicTheme"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/DynamicTheme/#themingdynamictheme","text":"","title":"Theming.DynamicTheme"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/DynamicTheme/#fields","text":"Theme Theme - The Underlying Loaded Theme. EventHandler ThemeChanged - A Custom Event Handler, Triggered When The Theme Is Changed. Subscribe To This In A Custom Control To Implement Theming.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/DynamicTheme/#methods","text":"void UpdateTheme() - Manually Trigger The Theme Update Event. This Refreshes All Controls That Support Theming. Do This After Creating The UI, Or After Loading Dynamic Content.","title":"Methods"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/Theme/","text":"Theming.Theme Fields string Name - The Theme's Name. string Author - The Theme's Author. Color Background - The Theme's Background Color. Color Text - The Theme's Text Color. Color TitleBar - The Theme's Title Bar Color. Color AccentDark - The Theme's Dark Accent Color. Color AccentLight - The Theme's Light Accent Color.","title":"Theme"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/Theme/#themingtheme","text":"","title":"Theming.Theme"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/Theme/#fields","text":"string Name - The Theme's Name. string Author - The Theme's Author. Color Background - The Theme's Background Color. Color Text - The Theme's Text Color. Color TitleBar - The Theme's Title Bar Color. Color AccentDark - The Theme's Dark Accent Color. Color AccentLight - The Theme's Light Accent Color.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/ThemeEngine/","text":"Theming.ThemeEngine Fields DynamicTheme LoadedTheme - The Currently Loaded Theme. Methods void InstallTheme(string FileName, bool KeepOriginal) - Installs A Theme Into The Global Theme Directory. void LoadTheme(string Name) - Loads A Theme. void LoadThemes() - Load All Themes From The Global Theme Install Directory.","title":"ThemeEngine"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/ThemeEngine/#themingthemeengine","text":"","title":"Theming.ThemeEngine"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/ThemeEngine/#fields","text":"DynamicTheme LoadedTheme - The Currently Loaded Theme.","title":"Fields"},{"location":"MabelMedia.SharpPlus/BetterForms/Theming/ThemeEngine/#methods","text":"void InstallTheme(string FileName, bool KeepOriginal) - Installs A Theme Into The Global Theme Directory. void LoadTheme(string Name) - Loads A Theme. void LoadThemes() - Load All Themes From The Global Theme Install Directory.","title":"Methods"},{"location":"MabelMedia.SharpPlus/CommandLine/ArgumentSet/","text":"CommandLine.ArgumentSet Fields string Command - The First Argument, When SkipCommand Is Passed As False. List<string> Arguments - A List Of Arguments. Dictionary<string, string> Flags - A List Of Flags, And If They Contain = When Parsed, Their Values. Methods ArgumentSet Parse(string[] Raw, bool SkipCommand) - Create A New ArgumentSet . bool HasFlag(string Key) - Does Flags Contain This Key? bool HasOption(string Key) - Does Flags Contain This Key, And A Valid Value?","title":"ArgumentSet"},{"location":"MabelMedia.SharpPlus/CommandLine/ArgumentSet/#commandlineargumentset","text":"","title":"CommandLine.ArgumentSet"},{"location":"MabelMedia.SharpPlus/CommandLine/ArgumentSet/#fields","text":"string Command - The First Argument, When SkipCommand Is Passed As False. List<string> Arguments - A List Of Arguments. Dictionary<string, string> Flags - A List Of Flags, And If They Contain = When Parsed, Their Values.","title":"Fields"},{"location":"MabelMedia.SharpPlus/CommandLine/ArgumentSet/#methods","text":"ArgumentSet Parse(string[] Raw, bool SkipCommand) - Create A New ArgumentSet . bool HasFlag(string Key) - Does Flags Contain This Key? bool HasOption(string Key) - Does Flags Contain This Key, And A Valid Value?","title":"Methods"},{"location":"MabelMedia.SharpPlus/CommandLine/BetterConsole/","text":"CommandLine.BetterConsole Fields enum PrintType - An Enum, Governing How PrintString Prints Text. This Includes: Normal - Print The Message, Without Any Formatting. Debug - Debug Messages, Useful For... Debugging. Warning - Warns The User, Useful For Depreciation. Error - Notifies The User Of An Error, Useful For Recoverable Errors. Fatal - Notifies The User Of A Fatal Error, Usefull For Non-Recoverable Errors. Success - Notifies The User Of An Operation's Sucess. Useful For Status Updates. Methods bool YesNoPrompt(string Prompt) - Show A Prompt Message, And Ask For Confirmation. string ReadPassword(string Prompt) - Show A Prompt Message, Then Read The Input Like A Password, Hiding It From Standard Out, For Privacy / Security. void PrintString(PrintType Type, string Message, bool NewLine) - Print Some Text To The Terminal, Colored And Prepended By A Certain PrintType .","title":"BetterConsole"},{"location":"MabelMedia.SharpPlus/CommandLine/BetterConsole/#commandlinebetterconsole","text":"","title":"CommandLine.BetterConsole"},{"location":"MabelMedia.SharpPlus/CommandLine/BetterConsole/#fields","text":"enum PrintType - An Enum, Governing How PrintString Prints Text. This Includes: Normal - Print The Message, Without Any Formatting. Debug - Debug Messages, Useful For... Debugging. Warning - Warns The User, Useful For Depreciation. Error - Notifies The User Of An Error, Useful For Recoverable Errors. Fatal - Notifies The User Of A Fatal Error, Usefull For Non-Recoverable Errors. Success - Notifies The User Of An Operation's Sucess. Useful For Status Updates.","title":"Fields"},{"location":"MabelMedia.SharpPlus/CommandLine/BetterConsole/#methods","text":"bool YesNoPrompt(string Prompt) - Show A Prompt Message, And Ask For Confirmation. string ReadPassword(string Prompt) - Show A Prompt Message, Then Read The Input Like A Password, Hiding It From Standard Out, For Privacy / Security. void PrintString(PrintType Type, string Message, bool NewLine) - Print Some Text To The Terminal, Colored And Prepended By A Certain PrintType .","title":"Methods"},{"location":"MabelMedia.SharpPlus/Compression/Wrappers/","text":"Compression.Wrappers Extensions byte[] LZMACompress(this byte[] Src) - Compress Data, Using The LZMA Compression Algorithm. byte[] LZMADecompress(this byte[] Src) - Decompress Data, Using The LZMA Compression Algorithm.","title":"Wrappers"},{"location":"MabelMedia.SharpPlus/Compression/Wrappers/#compressionwrappers","text":"","title":"Compression.Wrappers"},{"location":"MabelMedia.SharpPlus/Compression/Wrappers/#extensions","text":"byte[] LZMACompress(this byte[] Src) - Compress Data, Using The LZMA Compression Algorithm. byte[] LZMADecompress(this byte[] Src) - Decompress Data, Using The LZMA Compression Algorithm.","title":"Extensions"},{"location":"MabelMedia.SharpPlus/CrossPlatform/DesktopEnvironment/","text":"CrossPlatform.DesktopEnvironment CrossPlatform.DesktopEnvironment Is An Enum, Denoting Which Desktop EnvironmentOperating (Only Under Linux) The App Is Running On. This Includes: Gnome","title":"DesktopEnvironment"},{"location":"MabelMedia.SharpPlus/CrossPlatform/DesktopEnvironment/#crossplatformdesktopenvironment","text":"","title":"CrossPlatform.DesktopEnvironment"},{"location":"MabelMedia.SharpPlus/CrossPlatform/DesktopEnvironment/#crossplatformdesktopenvironment-is-an-enum-denoting-which-desktop-environmentoperating-only-under-linux-the-app-is-running-on","text":"This Includes: Gnome","title":"CrossPlatform.DesktopEnvironment Is An Enum, Denoting Which Desktop EnvironmentOperating (Only Under Linux) The App Is Running On."},{"location":"MabelMedia.SharpPlus/CrossPlatform/OS/","text":"CrossPlatform.OS CrossPlatform.OS Is An Enum, Denoting Which Operating System The App Is Running On. This Includes: Windows MacOS Linux","title":"OS"},{"location":"MabelMedia.SharpPlus/CrossPlatform/OS/#crossplatformos","text":"","title":"CrossPlatform.OS"},{"location":"MabelMedia.SharpPlus/CrossPlatform/OS/#crossplatformos-is-an-enum-denoting-which-operating-system-the-app-is-running-on","text":"This Includes: Windows MacOS Linux","title":"CrossPlatform.OS Is An Enum, Denoting Which Operating System The App Is Running On."},{"location":"MabelMedia.SharpPlus/CrossPlatform/Platform/","text":"CrossPlatform.Platform Fields OS CurrentOS - The Current Running OS. DesktopEnvironment CurrentDE - The Current Running Desktop Environment, null Under MacOS / Windows.","title":"Platform"},{"location":"MabelMedia.SharpPlus/CrossPlatform/Platform/#crossplatformplatform","text":"","title":"CrossPlatform.Platform"},{"location":"MabelMedia.SharpPlus/CrossPlatform/Platform/#fields","text":"OS CurrentOS - The Current Running OS. DesktopEnvironment CurrentDE - The Current Running Desktop Environment, null Under MacOS / Windows.","title":"Fields"},{"location":"MabelMedia.SharpPlus/CrossPlatform/PlatformSpecificException/","text":"CrossPlatform.PlatformSpecificException Methods new(OS SupportedPlatform) - Throw An Exception If The Current OS Is Not Supported In This Scope.","title":"PlatformSpecificException"},{"location":"MabelMedia.SharpPlus/CrossPlatform/PlatformSpecificException/#crossplatformplatformspecificexception","text":"","title":"CrossPlatform.PlatformSpecificException"},{"location":"MabelMedia.SharpPlus/CrossPlatform/PlatformSpecificException/#methods","text":"new(OS SupportedPlatform) - Throw An Exception If The Current OS Is Not Supported In This Scope.","title":"Methods"},{"location":"MabelMedia.SharpPlus/FileSystem/CrossPlatformFileSystem/","text":"FileSystem.CrossPlatformFileSystem Methods string GetPath(FoilderName BaseFolder, string AppendPath, [bool UseDE = false]) - Gets A Path, For Your Current OS , And Appends The AppendPath To It. If UseDE Set To true , Use The Desktop Environment's Folder On Linux Instead. void CreateAppShortcuts(AppInfo Info, string MainExec, string Description) - Create App Shortcuts, Regardless Of Platform. void RemoveAppShortcuts(AppInfo Info) - Remove App Shortcuts, Regardless Of Platform. string GetTempFile() - Get A Temporary File With A Random Name, And .tmp Extension. string GetAppPath(AppInfo Info) - Gets The App Folder For Your App.","title":"CrossPlatformFileSystem"},{"location":"MabelMedia.SharpPlus/FileSystem/CrossPlatformFileSystem/#filesystemcrossplatformfilesystem","text":"","title":"FileSystem.CrossPlatformFileSystem"},{"location":"MabelMedia.SharpPlus/FileSystem/CrossPlatformFileSystem/#methods","text":"string GetPath(FoilderName BaseFolder, string AppendPath, [bool UseDE = false]) - Gets A Path, For Your Current OS , And Appends The AppendPath To It. If UseDE Set To true , Use The Desktop Environment's Folder On Linux Instead. void CreateAppShortcuts(AppInfo Info, string MainExec, string Description) - Create App Shortcuts, Regardless Of Platform. void RemoveAppShortcuts(AppInfo Info) - Remove App Shortcuts, Regardless Of Platform. string GetTempFile() - Get A Temporary File With A Random Name, And .tmp Extension. string GetAppPath(AppInfo Info) - Gets The App Folder For Your App.","title":"Methods"},{"location":"MabelMedia.SharpPlus/FileSystem/CrossPlatformPath/","text":"FileSystem.CrossPlatformPath Fields string Windows - The Folder's Location On Windows . string MacOS - The Folder's Location On MacOS . string Linux - The Folder's Location On Linux . string Gnome - The Folder's Location On Gnome, Linux .","title":"CrossPlatformPath"},{"location":"MabelMedia.SharpPlus/FileSystem/CrossPlatformPath/#filesystemcrossplatformpath","text":"","title":"FileSystem.CrossPlatformPath"},{"location":"MabelMedia.SharpPlus/FileSystem/CrossPlatformPath/#fields","text":"string Windows - The Folder's Location On Windows . string MacOS - The Folder's Location On MacOS . string Linux - The Folder's Location On Linux . string Gnome - The Folder's Location On Gnome, Linux .","title":"Fields"},{"location":"MabelMedia.SharpPlus/FileSystem/FolderName/","text":"FileSystem.FolderName FileSystem.FolderName Is An Enum, Denoting Which BaseFolder To Use In GetFolder . This Includes: Desktop ProgramFiles Documents Home InstalledThemes TemporaryFiles Start","title":"FolderName"},{"location":"MabelMedia.SharpPlus/FileSystem/FolderName/#filesystemfoldername","text":"","title":"FileSystem.FolderName"},{"location":"MabelMedia.SharpPlus/FileSystem/FolderName/#filesystemfoldername-is-an-enum-denoting-which-basefolder-to-use-in-getfolder","text":"This Includes: Desktop ProgramFiles Documents Home InstalledThemes TemporaryFiles Start","title":"FileSystem.FolderName Is An Enum, Denoting Which BaseFolder To Use In GetFolder."},{"location":"MabelMedia.SharpPlus/FileSystem/StringHelpers/","text":"FileSystem.StringHelpers Methods string RandomString(int MinLength, int MaxLength) - Gets A Random String Of Letters, A Random Length Between MinLength And MaxLength.","title":"StringHelpers"},{"location":"MabelMedia.SharpPlus/FileSystem/StringHelpers/#filesystemstringhelpers","text":"","title":"FileSystem.StringHelpers"},{"location":"MabelMedia.SharpPlus/FileSystem/StringHelpers/#methods","text":"string RandomString(int MinLength, int MaxLength) - Gets A Random String Of Letters, A Random Length Between MinLength And MaxLength.","title":"Methods"},{"location":"MabelMedia.SharpPlus/Localization/LanguageDictionary/","text":"Localization.LanguageDictionary Fields Dictionary<SupportedLanguage, List<string>> LanguageStrings - A List Of Languages, Comprising Of Lists Of Strings For That Language. Methods LanguageDictionary Load(string FileName) - Load A LanguageDictionary From Disk. bool Supported(SupportedLanguage Language) - Is This Language Supported In The Dictionary? bool TryGetString(SupportedLanguage Language, int Index, out string Result) - Try And Get The String At Index , In The SupportedLanguage .","title":"LanguageDictionary"},{"location":"MabelMedia.SharpPlus/Localization/LanguageDictionary/#localizationlanguagedictionary","text":"","title":"Localization.LanguageDictionary"},{"location":"MabelMedia.SharpPlus/Localization/LanguageDictionary/#fields","text":"Dictionary<SupportedLanguage, List<string>> LanguageStrings - A List Of Languages, Comprising Of Lists Of Strings For That Language.","title":"Fields"},{"location":"MabelMedia.SharpPlus/Localization/LanguageDictionary/#methods","text":"LanguageDictionary Load(string FileName) - Load A LanguageDictionary From Disk. bool Supported(SupportedLanguage Language) - Is This Language Supported In The Dictionary? bool TryGetString(SupportedLanguage Language, int Index, out string Result) - Try And Get The String At Index , In The SupportedLanguage .","title":"Methods"},{"location":"MabelMedia.SharpPlus/Localization/SupportedLanguage/","text":"Localization.SupportedLanguage Localization.SupportedLanguage Is An Enum, Denoting Which Languages Are Supported In Localization. This Includes: English","title":"SupportedLanguage"},{"location":"MabelMedia.SharpPlus/Localization/SupportedLanguage/#localizationsupportedlanguage","text":"","title":"Localization.SupportedLanguage"},{"location":"MabelMedia.SharpPlus/Localization/SupportedLanguage/#localizationsupportedlanguage-is-an-enum-denoting-which-languages-are-supported-in-localization","text":"This Includes: English","title":"Localization.SupportedLanguage Is An Enum, Denoting Which Languages Are Supported In Localization."},{"location":"MabelMedia.SharpPlus/Mathmatics/FileSize/","text":"Mathmatics.FileSize Fields long RawSize - The Raw FileSize. Methods string Kilobytes() - Format As Kilobytes. string Megabytes() - Format As Megabytes. string Gigabytes() - Format As Gigabytes. string Terabytes() - Format As Terabytes. string Petabytes() - Format As Petabytes. string BestFit() - Determine Which Formatter To Use, Based On Size. new(long Src) - Turn A long Into A FileSize . new(string Src) - Turn A string Into A FileSize . (FileSize)long - Type Convert A long To FileSize . (FileSize)string - Type Convert A string To FileSize .","title":"FileSize"},{"location":"MabelMedia.SharpPlus/Mathmatics/FileSize/#mathmaticsfilesize","text":"","title":"Mathmatics.FileSize"},{"location":"MabelMedia.SharpPlus/Mathmatics/FileSize/#fields","text":"long RawSize - The Raw FileSize.","title":"Fields"},{"location":"MabelMedia.SharpPlus/Mathmatics/FileSize/#methods","text":"string Kilobytes() - Format As Kilobytes. string Megabytes() - Format As Megabytes. string Gigabytes() - Format As Gigabytes. string Terabytes() - Format As Terabytes. string Petabytes() - Format As Petabytes. string BestFit() - Determine Which Formatter To Use, Based On Size. new(long Src) - Turn A long Into A FileSize . new(string Src) - Turn A string Into A FileSize . (FileSize)long - Type Convert A long To FileSize . (FileSize)string - Type Convert A string To FileSize .","title":"Methods"},{"location":"MabelMedia.SharpPlus/Networking/NetworkClient/","text":"Networking.NetworkClient Fields TcpClient Connection - The Underlying Socket. IPAddress Address - The Other Connected Client's IP Address. NetworkStream Pipe - The Communications Pipe For The Client. Methods new(TcpClient Connection) - Promote A TcpClient To A NetworkClient Without Losing The Connection. void PushMessage(Message Message) - Push A Custom Data Class Message To The Other Client. Message PullMessage() - Pull A Custom Data Class Message From The Other Client.","title":"NetworkClient"},{"location":"MabelMedia.SharpPlus/Networking/NetworkClient/#networkingnetworkclient","text":"","title":"Networking.NetworkClient"},{"location":"MabelMedia.SharpPlus/Networking/NetworkClient/#fields","text":"TcpClient Connection - The Underlying Socket. IPAddress Address - The Other Connected Client's IP Address. NetworkStream Pipe - The Communications Pipe For The Client.","title":"Fields"},{"location":"MabelMedia.SharpPlus/Networking/NetworkClient/#methods","text":"new(TcpClient Connection) - Promote A TcpClient To A NetworkClient Without Losing The Connection. void PushMessage(Message Message) - Push A Custom Data Class Message To The Other Client. Message PullMessage() - Pull A Custom Data Class Message From The Other Client.","title":"Methods"},{"location":"MabelMedia.SharpPlus/Resources/Library/","text":"Resources.Library Fields Assembly Binary - The Loaded Binary. List<Type> Types - A List Of All Types In The Library. Methods Library LoadLocal(string FileName) - Load A Library From A (.dll) File. Library LoadRemote(string FileName) - Load A Library From An Internet Url. Library LoadRaw(byte[] RawBinary) - Load A Library From A Raw Byte Array. object RunMethod(int TypeIndex, string MethodName, [object Instance = null], [object[] Parameters = null]) - Run A Method Inside The Loaded Library.","title":"Library"},{"location":"MabelMedia.SharpPlus/Resources/Library/#resourceslibrary","text":"","title":"Resources.Library"},{"location":"MabelMedia.SharpPlus/Resources/Library/#fields","text":"Assembly Binary - The Loaded Binary. List<Type> Types - A List Of All Types In The Library.","title":"Fields"},{"location":"MabelMedia.SharpPlus/Resources/Library/#methods","text":"Library LoadLocal(string FileName) - Load A Library From A (.dll) File. Library LoadRemote(string FileName) - Load A Library From An Internet Url. Library LoadRaw(byte[] RawBinary) - Load A Library From A Raw Byte Array. object RunMethod(int TypeIndex, string MethodName, [object Instance = null], [object[] Parameters = null]) - Run A Method Inside The Loaded Library.","title":"Methods"},{"location":"MabelMedia.SharpPlus/Resources/ResourceManager/","text":"Resources.ResourceManager Methods Stream GetRaw(string Name) - Get A Raw Stream Resource From Your Entry Assembly. Stream GetRaw(string Name, Assembly Src) - Get A Raw Stream Resource From Assembly Src . string GetText(string Name) - Get A Text Resource From Your Entry Assembly. string GetText(string Name, Assembly Src) - Get A Text Resource From Assembly Src . Image GetImage(string Name) - Get An Image Resource From Your Entry Assembly. Image GetImage(string Name, Assembly Src) - Get An Image Resource From Assembly Src . Icon GetIcon(string Name) - Get An Icon Resource From Your Entry Assembly. Icon GetIcon(string Name, Assembly Src) - Get An Icon Resource From Assembly Src .","title":"ResourceManager"},{"location":"MabelMedia.SharpPlus/Resources/ResourceManager/#resourcesresourcemanager","text":"","title":"Resources.ResourceManager"},{"location":"MabelMedia.SharpPlus/Resources/ResourceManager/#methods","text":"Stream GetRaw(string Name) - Get A Raw Stream Resource From Your Entry Assembly. Stream GetRaw(string Name, Assembly Src) - Get A Raw Stream Resource From Assembly Src . string GetText(string Name) - Get A Text Resource From Your Entry Assembly. string GetText(string Name, Assembly Src) - Get A Text Resource From Assembly Src . Image GetImage(string Name) - Get An Image Resource From Your Entry Assembly. Image GetImage(string Name, Assembly Src) - Get An Image Resource From Assembly Src . Icon GetIcon(string Name) - Get An Icon Resource From Your Entry Assembly. Icon GetIcon(string Name, Assembly Src) - Get An Icon Resource From Assembly Src .","title":"Methods"},{"location":"MabelMedia.SharpPlus/Resources/Wrappers/","text":"Resources.Wrappers Extensions byte[] ToArray(this Stream Src) - Convert A Stream To A byte[] .","title":"Wrappers"},{"location":"MabelMedia.SharpPlus/Resources/Wrappers/#resourceswrappers","text":"","title":"Resources.Wrappers"},{"location":"MabelMedia.SharpPlus/Resources/Wrappers/#extensions","text":"byte[] ToArray(this Stream Src) - Convert A Stream To A byte[] .","title":"Extensions"},{"location":"MabelMedia.SharpPlus/Serialization/Config/","text":"Serialization.Config Methods DataClass Load<DataClass>(string FileName) - Load A Config File From FileName , And Create An Instance Of DataClass From It. void Save<DataClass>(string FileName) Save DataClass To FileName .","title":"Config"},{"location":"MabelMedia.SharpPlus/Serialization/Config/#serializationconfig","text":"","title":"Serialization.Config"},{"location":"MabelMedia.SharpPlus/Serialization/Config/#methods","text":"DataClass Load<DataClass>(string FileName) - Load A Config File From FileName , And Create An Instance Of DataClass From It. void Save<DataClass>(string FileName) Save DataClass To FileName .","title":"Methods"},{"location":"MabelMedia.SharpPlus/Serialization/JSONSerializer/","text":"Serialization.JSONSerializer Methods byte[] Serialize<DataClass>(DataClass Src) - JSON Encode Src . DataClass Deserialize(byte[] Src) - JSON Decode Src .","title":"JSONSerializer"},{"location":"MabelMedia.SharpPlus/Serialization/JSONSerializer/#serializationjsonserializer","text":"","title":"Serialization.JSONSerializer"},{"location":"MabelMedia.SharpPlus/Serialization/JSONSerializer/#methods","text":"byte[] Serialize<DataClass>(DataClass Src) - JSON Encode Src . DataClass Deserialize(byte[] Src) - JSON Decode Src .","title":"Methods"},{"location":"MabelMedia.SharpPlus/Serialization/LZMACompressedJSONSerializer/","text":"Serialization.LZMACompressedJSONSerializer Methods byte[] Serialize<DataClass>(DataClass Src) - JSON Encode Src , Then LZMA Compress The Result. DataClass Deserialize(byte[] Src) - LZMA Decompress Src , Then JSON Decode The Result.","title":"LZMACompressedJSONSerializer"},{"location":"MabelMedia.SharpPlus/Serialization/LZMACompressedJSONSerializer/#serializationlzmacompressedjsonserializer","text":"","title":"Serialization.LZMACompressedJSONSerializer"},{"location":"MabelMedia.SharpPlus/Serialization/LZMACompressedJSONSerializer/#methods","text":"byte[] Serialize<DataClass>(DataClass Src) - JSON Encode Src , Then LZMA Compress The Result. DataClass Deserialize(byte[] Src) - LZMA Decompress Src , Then JSON Decode The Result.","title":"Methods"},{"location":"MabelMedia.SharpPlus/Serialization/Wrappers/","text":"Serialization.Wrappers Extensions string Stringify(this AppManifest Src) - Turn A AppManifest Into A string .","title":"Wrappers"},{"location":"MabelMedia.SharpPlus/Serialization/Wrappers/#serializationwrappers","text":"","title":"Serialization.Wrappers"},{"location":"MabelMedia.SharpPlus/Serialization/Wrappers/#extensions","text":"string Stringify(this AppManifest Src) - Turn A AppManifest Into A string .","title":"Extensions"}]}